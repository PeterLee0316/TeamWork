////////////////////////////////////////////////////////////////////////////////////////////
// How to 
// write histroy until using SVN or DVCS
// Grade : ★ to ★★★

////////////////////////////////////////////////////////////////////////////////////////////
// SJR

// Version : 0.0.1
// Grade : ★
// Date : 2016-01-29
// Context
1. Data 관리를 structure -> class로 바꾸고, 이를 위해 class의 deep copy함수를 만들었음.
함수 사용법 : T target = ObjectExtensions.Copy(T source);
2. SPos_XY,XYT,XYTZ 등의 structure 등을 class로 변경, structure는 hardware library 때문에 필요한
경우가 아니면 자제할 것.
3. MLWDicer class에서 각 component class 생성 및 초기화 하는 부분의 틀을 만들어가기 시작함.
5. 그외 바뀐 부분들에 대하여 build success 확인

// Version : 0.0.2
// Grade : ★
// Date : 2016-02-14
// Context
1. DataBase를 SQLite 사용하기로 결정. NuGet -> System.Data.SQLite 추가
serialization 기능을 이용해서 자동으로 data class save, load하는 부분 완료. NuGet -> Newtonsoft.Json 추가
2. Database를 용도별로 몇개로 구분. MLog에서 파일로 저장하는 기능에 추가로 DB에 저장하는 기능도 추가
3. DBManager class 생성 및 입출력 일반화, backup, delete, insert등의 일반 기능 적용.
4. Net Runtime Library v4.6 으로 변경
5. app.setting을 이용하기 위해서 System.Configuration 참조 추가 
6. system data, model data, log save/load 기능 추가

// Version : 0.0.3
// Grade : ★
// Date : 2016-02-22
// Context
1. 정월대보름
2. UI와 통합.
3. IO info file save/load 기능 추가
4. Git에 올리는 최초 버전
5. 4를 위해 참조에서 syncfusion lib 경로 수정

// Version : 0.0.4
// Grade : ★
// Date : 2016-03-02
// Context
1. Error info file save/load 기능 추가
2. T:\SFA\LWDicer\dll\Syncfusion 디렉토리로 syncfusion dll 참조 파일 모아놓음
3. Merge sjr & lhs

// Version : 0.0.5
// Grade : ★
// Date : 2016-03-03
// Context
1. MIO_YMC : Yaskawa IO class 기본 작업, SIMULATION_MOTION, SIMULATION_IO
2. MMotion_YMC : 기본 class 틀만 작업해놓고 있음

// Version : 0.0.6
// Grade : ★
// Date : 2016-03-22
// Context
1. MYaskawa : IO & Motion을 통합 제어하는 class. 1단계로 1cpu & 1port 기준으로 프로그램 작성
   MYaskawa class의 data에서 Motor data를 관리하고(max velocity, home offset, acc,dec, sw limit 등등)
   대신에 MMultiAxes_YMC class에서는 상대적으로 axis data check하는 부분을 MYaskawa가 담당하도록 구성
2. MMultiAxes_YMC : MYaskawa class의 윗부분을 담당할 멀티축 제어용 class, 
   단 최대 축수는 DEF_MAX_COORDINATE 4축으로 제한하여 설계함.
3. LWDicer class에서 MYaskawa 및 MMultiAxes_YMC 인스턴스 생성 부분 추가함
4. MIO_YMC class 에서도 hardware library error를 사용하기위해 error dictionary를 CMotionAPI class에 추가함
5. MTrsAutoManage class에도 별도의 thread이기 때문에 thread에서 기본적으로 YMC Comport를 open해줌

// Version : 0.0.7
// Grade : ★
// Date : 2016-03-22
// Context
1. CParaInfo class : Parameter 정보를 담는 클래스 및 관련 DB 작업 완료

// Version : 0.0.8
// Grade : ★
// Date : 2016-03-30
// Context
1. MMeHandler : Mechanical Layer 의 Handler class 1차 작업
2. 1을 진행하면서 MultiAxes_YMC, MYaskawa debugging하면서 수정작업
3. MLWDicer의 create handler, multiaxes 추가 및 MPMotionData를 db와 연결작업

// Version : 0.0.9
// Grade : ★
// Date : 2016-03-30
// Context
1. DataManager의 멤버들에서 m_ 접두어 제거, CSystemData에서 class array 형태의 멤버들은 별도의
클래스로 분리하여 load/save 루틴 추가
2. CMPMotionData class 속도 및 원점 복귀 관련하여 재정리

// Version : 0.0.10
// Grade : ★
// Date : 2016-04-05
// Context
1. MMeHandler : Up/Down 등의 cylidner 관련 함수들 정리중..
2. 각 Unit별 좌표 class CPosition 추가 및 save/load 및 인스턴스에 할당 관련 함수들 정리중..
3. MultiAxes 와 1:1로 맵핑되어 티칭 좌표등을 종합적으로 관리하는 CMovingObject class 추가함
4. DataManage의 데이터 읽고 쓰는 부분 함수들 정리 및 LWDicer에서 DataManager 호출하는 함수들도 정리
UI에서 화면 로딩할때 데이터는 DataManager에서 바로 읽고, 쓰는건 setdataToComponenet 처리하는것때문에 
LWDicer의 SaveSystemData, SaveModelData를 이용해서 저장하는 방식으로 호출함
(강제로 유도하기 위해서 property format 으로 바꾸고 { get; private set; } 으로 지정함)
LWDicer의 DataManager에서 데이터를 읽어오기 위한 3가지 함수 : SetSystemDataToComponent(), SetModelDataToComponent(), SetPositionDataToComponent()

// Version : 0.0.11
// Grade : ★
// Date : 2016-04-14
// Context
1. CMAxisZoneCheck : MultiAxes 축을 가진 Object가 이동시에, 특정 축이 안전위치로 이동후에 목표 위치로 
움직일 수 있도록 CMAxisZoneCheck class 를 추가함. 이때 안전위치를 체크하는 것은 로봇 위치가 아닌 센서로 감지하는 조건임. 
2. MMeHandler: 1번항목 관련 update 및 이동 관련 함수들을 상위 class 에서 호출하기 쉽도록 함수들 정리
3. CSystemData_MAxSafetyPos : 각 MultiAxes의 Safety Position을 system data에서 관리 
4. MCtrlHandler : skeleton code 작성 시작
5. MMechanicalLayer, MCtrlLayer의 필수 특성들을 위한 각 Layer의 Parent class 작성

// Version : 0.0.12
// Grade : ★
// Date : 2016-04-19
// Context
1. MCtrlHandler : 1차 작업 완료. 
   *** Upper/Lower Handler를 일단 Load/Unload Handler로 전용하는 개념으로 함수들을 만들었으나, 
   실제로 상위에서 알아서 반대로 호출해야할지, ctrl에서 알아서 반대로 실행해야할지, 
   혹은 애초에 저장 pos을 다르게 해야할지는 좀더 고민하는걸로 남겨둠.

// Version : 0.0.13
// Grade : ★
// Date : 2016-04-26
// Context
1. MMePushPull : 1차 작업 완료. PushPull Y축 및 Centering Unit 1,2를 가지고 있는 Mechanical Layer class
2. MDataManager : array 형태의 data class loading시에, 현재의 배열 크기보다 작을 경우에 전체를 ObjectExtension.Copy로
   한번에 복사할 경우에, 배열의 크기가 작아지는 문제 때문에, 배열 크기를 고려하여 load & copy 작업하는걸로 수정함
3. MLWDicer : Mechanical Layer의 create 함수 및 object info 부분 정리

// Version : 0.0.14
// Grade : ★
// Date : 2016-04-27
// Context
1. MMePushPull : Up/Down Cylinder 추가
2. MCtrlPushPull : 1차 작업 완료. 각 Part 와의 인터락은 추후에 작업하는걸로.

// Version : 0.0.15
// Grade : ★
// Date : 2016-05-10
// Context
1. MOpPanel : Jog부분을 뺀 1차 작업 완료.
2. MCtrlOpPanel : MOpPanel과 비슷한 수준에서 마무리. (기존의 MManageOpPanel -> MCtrlOpPanel로 이름 변경함.)
3. MACS : ACS 모션의 기본 class 틀만 작업해놓음.

// Version : 0.0.16
// Grade : ★
// Date : 2016-05-16
// Context
1. 개념 정리 : spinner, coater 개념에서 전체를 spinner로 통칭 및 인스턴스는 spinner1, spinner2로 사용
2. Define.cs : Handler & Spinner Step 추가 및 전체 Thread Step, Message 2차 정리
3. Thread Architecture 및 base function, Enum Data 정리함
4. MTrsAutoManager : 1차 정리함.

// Version : 0.0.17
// Grade : ★
// Date : 2016.05.17 ~ 2016.05.19
// Context
1. MTrsAutoManager : 2차 정리중
2. ModelHeaderList class에 IsFolder 란 member 추가
3. MEvent class 수정 및 Thread간 PostMsg, ReportAlarm 함수 정비
4. Cleaner, Coater 등등의 이름들 사용하던거 spinner1,2 로 변경
5. DataManager class : ModelHeaderList, Model 관련하여 DeleteModelData() 추가
6. AlarmInfo 함수 추가중..

// Version : 0.0.18
// Grade : ★
// Date : 16.05.20 ~ 16.05.23
// Context
1. add MLWDicer class's GetAlarmInfo Function. GenerateErrorCode로 받은 error를 복호화하는 함수
2. alarm class 정리 및 alarm 관련 함수들 추가. savealarmhistory, loadalarmhistory 등등

// Version : 0.0.19
// Grade : ★
// Date : 16.05.24 ~ 16.05.27
// Context
1. Parameter Info class 수정, LoadParameter function 추가, DataBase function에 selectraw function 수정함
2. 쓰레드간의 쉐이크핸드 메시지 수정 및 메시지 전송 함수 수정
3. MTrsSpinner, MTrsHandler class 1차 작업, Thread 

// Version : 0.0.20
// Grade : ★
// Date : 16.05.30
// Context
1. ModelHeader, ModelData 항목 조작 함수들 정비 및 추가.
2. System 시작시에 SystemData, Model Root Folder, Default Model 있는지 검사해서 없으면 자동 생성해줌

// Version : 0.0.21
// Grade : ★
// Date : 160531~160606
// Context
1. CMAxisZoneCheck class에서 SafetyPos member 빼내서 별도로 관리 및 관련 class들 수정 (주로 Mechanical Layer)
   MLWDicer의 Initialize에서 create class 할 때에 CMAxisZoneCheck 초기화해서 set해주는 부분 추가
2. class 필수부분, cylinder&vacuum 부분들 #region / #endregion으로 묶어줌
3. MeSpinner, MCtrlSpinner 1차 수정 완료.

// Version : 0.0.22
// Grade : ★
// Date : 160608
// Context
1. CPositionData 관련하여 LoadPositionData, SavePositionData 함수 정리 및 LWDicer에서 set position 하는 부분 정리.
   MeStage class 에 Camera, Laser Position 추가
2. 그동안 써오던 Laser1, Laser1_Z 등을 -----> Scanner1, Scanner1_Z 등으로 바꿈

// Version : 0.0.23
// Grade : ★
// Date : 160609~160610
// Context
1. EUnitPos -> EPosition, CUnitPos -> CPosition으로 이름 변경
2. UHANDLER -> UPPER_HANDLER, LHANDLER -> LOWER_HANDLER 로 이름 변경
3. CWorkPiece class를 만들어 wafer, panel등 제품을 관리하고, EProcessPhase를 만들어 각 공정step 관리 및 택타임 관리할수 있도록 함.
   (어디까지나 임시일듯..)
4. Thread Step, Thread Message 정비, SetThreadChannel 함수 정리 및 Thread간 Postmessage test 완료.
   (Spinner1, Spinner2 로 두개로 나뉘어선언했던 MSG ID등을 Spinner하나로 통일해서 사용하도록 변경)

// Version : 0.0.24
// Grade : ★
// Date : 160613~160617
// Context
1. MTrsHandler Lower, Upper Handler Step, Message 뒤바뀐 부분 수정 완료
2. MMePushPull, MCtrlPushPull Centering -> Center unit으로 이름 변경 및 Center Unit 동시 동작 함수등 추가
3. MTrsPushPull class 1차 작성. 어떤 Unit과의 작업이 끝난후에, Wafer 존재 유무에 따라 다음 step을 결정하는 부분 및
   Handler와의 Panel Handshake 부분 작성
4. Model, Cassette, WaferFrame Data를 리스트로 관리하기 위해서 CModelHeader -> CListHeader 로 이름 변경
5. CCassetteData 가 선언은 되어있으나 MeElevator에서만 쓰이고, DataManager에 다른 CWaferCassette가 선언되어있어
   임시로 이름을 CCassetteData -> CCassetteData_obsolete 로 변경함. 추후 이과장이 관련부분 수정 필요함
6. DataManager에서 Model, Cassette, WaferFrame Data를 각각 List로 관리하도록 관련함수 업데이트 및
   FormModelData class를 공용으로 사용할 수 있도록 관련 부분 업데이트

// Version : 0.0.25
// Grade : ★
// Date : 160620~160624
// Context
1. Teaching Data Dialog에서 사용하기 위해 private CMovingObject를 public CMovingObject { get; private set; } 으로 변경함
2. DEF_Yaskawa, DEF_ACS에서 중복 사용중인 것들은 DEF_Motion 으로 이동시킴
3. Yaskawa MP Motion 생성시에 Motion Name 글자수 제한(8자) 확인 및 수정
4. Excel Data 읽어오는 부분 함수들 ImportDataFromExcel 로 수정, 반대로 내보내는 함수 이름은 ExportDataToExcel로 할 것
5. IO class 수정, 동작 확인 및 IO dialog 
6. ymc libraray error code & text 를 dictionary로 만들어, 에러 로그 기록할 때에 같이 기록할수 있도록 추가함.
7. limitsensor dialog 상태 표시하는 부분 추가 및 CMPServoStatus & CACSServoStatus 비슷한 변수들 이름 통일함.
8. Teaching dialog에서 목표위치 keyin & 현재위치를 목표위치로 셋팅하는 부분의 계산식 변경 및 확인 완료.
9. CMessageInfo class 작성 및 DB 연결함
10. FormUnitInit dialog 수정중...

// Version : 0.0.26
// Grade : ★
// Date : 160627~160701
// Context
1. FormUnitInit, FormOriginReturn dialog 수정중...
2. Alarm, Message Display Dialog 수정.
3. Dialog 생성 부분을 찾아서 var dlg = new XXX() 형식으로 바꿈.
4. Display 쪽에서 iResult = DoSomething()으로 받아서 CMainFrame.DisplayAlarm(iResult); 로 호출하면 되도록 변경함.
5. CMessageInfo에 MessageType 추가함.
6. DisplayAlarm, DisplayMessage 함수의 위치를 LWDicer -> CMainFrame으로 변경. (NameSpace 위치상 제자리로 보냄.)
7. 수정된 information data를 쉽게 처리할 수 있도록 UpdateAlarmInfo, MessageInfo, ParaInfo 함수 추가.. 
8. display Process, Object information on AlarmDisplay dialog.
9. MACS class : ACS? null 처리. public CACSChannel Motion; 를 CACSData -> CACSRefComp로 위치 변경 적용
10. MLWDicer.Language 로 단축 생성. FormMessageBox class 및 MessageInfo class 관련 작업 완료

// Version : 0.0.27
// Grade : ★
// Date : 160704~160708
// Context
1. GenerateError + ReportAlarm 등을 테스트하기 위해서 FormTest class 추가 및 알람 발생 테스트 함수 추가
2. MLWDicer의 Initialize 함수에서 object id 미일치 부분 수정함.
3. Jog Dialog 수정 완료 및 동작 관련 Motion 함수 부분 수정함
4. string.IsNullOrEmpty -> string.IsNullOrWhiteSpace 로 사용 변경함.
5. ImportXXXDataFromExcel함수에서 데이터 읽어왔을때, 무조건 덮어쓰는 대신에 기존 데이터와 비교하여 
undefined 가 아닌 부분만 업데이트함. & 두번씩 저장하던 부분 수정.
6. 5번과 연계하기 위해서 Import&Export dialog에 delete db 부분도 추가함.
7. XXX dlg = new XXX() -----> var dlg = new XXX() 로 수정함.
8. 자주 쓰이는데 이름이 길어져서 CMainFrame.LWDicer.m_DataManager -> CMainFrame.DataManager 로 변경함.
9. CMainFrame.DisplayMsg 함수 호출할때 string으로만 호출하도록 변경. (index로 호출시에 소스코드에서 알아보기 어려움.)
   관련 부분 수정 및 message.IsEqual 함수 판단 부분 수정
10. Image directory에 dispenser project에서 쓰이던 icon file 추가함
-. CreateMultiAxes_ACS 함수만 만듬. 나중에 ljj 과장에게 요청필요.

// Version : 0.0.28
// Grade : ★
// Date : 160712~160715
// Context
1. Motor, Cylidner, Vacuum 등의 dialog에 select all 버튼 추가함
2. User & Login/Logout 정보 및 목록 관련 부분 UI, DB 추가.
3. Keyboard에 title 추가
4. MainForm 전환시에 Form의 위치 틀어지는 문제 수정 및 FormArray형태로 코드 단순화

// Version : 0.0.29
// Grade : ★
// Date : 160718~160722
// Context
1. ENozzleOpMode가 coating만의 스텝을 담당하고 있었기에, ECleanMode / ECoatMode 로 분리하고
CSpinStep class -> CCleanStep / CCoatStep class 로 분리
2. Yaskawa IO class 수정. 아진 보드를 위해 MP2100 보드 셋팅 및 출력 부분 확인 완료.

// Version : 0.0.29
// Grade : ★
// Date : 160725~160729
// Context
1. User Login & Manage User List UI & DB 수정
2. Log 조회화면 수정. (엑셀 export부분은 추가 수정 필요)

// Version : 0.0.30
// Grade : ★
// Date : 160808~160812
// Context
1. SetSystemParameter 등의 함수에서 프로그램 시작시에 두번 읽는 부분 없앰.
2. 266 레이저 테스트 설비에 scanner를 이식하고, 그 장비에도 본 프로그램을 사용하기 시작하면서 생기게 된
하드웨어 구성 불일치로 인해 pre define 추가 : EQUIP_DICING_DEV, EQUIP_266_DEV
3. Jog Dialog 호출을 CMainFrame.DisplayJog 로 변경
4. DisplayMsg 함수에서 유저의 선택을 기다리는 함수는 InquireMsg로 따로 호출하도록 변경함
5. GetKeyPad, GetKeyboard 함수를 LWDicer class -> CMainFrame class 로 위치 변경함.(ui 관련 함수는 ui쪽에 배치)

// Version : 0.0.31
// Grade : ★
// Date : 160815~160819
// Context
1. FormTeach class 버그 수정 및 함수 정리 (ex. m_nSelectedPos이 멤버 변수 및 함수 파라미터로 같이 쓰이고 있었음. 에효.)
   nTeachPos -> m_nSelectedPos 으로 변경 및 쓸데없는 함수들 정리함
2. MOpPanel 쪽 io 일부 할당 및 ctrl class moving function test 시작
3. CAlarmInfo, CMessageInfo, CParaInfo classes : IsEqual 함수 추가 및 db에 저장시 쓸모없는 값 및 중복 제거

// Version : 0.0.31
// Grade : ★
// Date : 160824~160826
// Context
1. MCtrlLoader Teaching Form에서 목표위치로 이동 명령 및 Jog Motion 관련하여 관련 class 및 MYaskawa class 수정
2. Yasakawa Jog Motion 시에 button 누르고 있을때 jog 계속 이동 및 abs move 시에 stop버튼 활성화
3. LimitSensor form에서 서보 상태 표시에 컬러 추가
4. Form Dialog의 timer를 100 -> 10ms 으로 변경. define UITimerInterval
5. LWDicer.Control -> LWDicer.Layers 로 namespace changed
6. Teaching Form의 display position 및 data display 할 때, .Text = Convert.ToString -> .Text = String.Format("{0:0.000}", 으로 적용

// Version : 0.0.32
// Grade : ★
// Date : 160829~160902
// Context
1. MCtrlLoader class에 CheckSafety_forMoving method 추가
2. FormPushPullTeach moving 함수 및 MCtrlPushPull 의 PushPull Y축 이동 관련된 함수들 수정
3. AlarmInfoList, MessageInfoList export 시에 delegate function을 이용하여 sort 기능, trim 추가
4. io list 읽어올때 버그 수정
5. 에러 발생시에 HardwareLibrary에서 에러메시지를 리턴해줄 경우에 이를 보여주기위해 MObject class, GernerateErrorCode 함수 및
   FormAlarmDisplay dialog 수정함. ErrorSubMsg 사용법은 MYaskawa class를 참조할 것


// Version : 0.0.33
// Grade : ★
// Date : 160905~160908
// Context
1. MainFrame이 Load되기 전에 알람 발생하게되면 에러가 발생하는 문제 수정
2. FormSpinner1Teach & FormSpinner2Teach class 들이 같은 역할을 하기에 공용으로 사용할 수 있도록 수정하고 하나 빼버림
3. MTrsAutoManager Thread에서도 역시 시작시에 yaskawa open controller 추가
4. 원점복귀 대화상자 상태 표시 수정 및 test 모드로 원점 복귀 flag set/reset 기능 추가
5. UnitInit 대화상자 수정중.. 
6. for test 로 주석 달아서 임시로 테스트 하는 부분을 위해서 SIMULATION_TEST 로 pre define 추가
7. MTrsHandler, MTrsSpinner, MTrsLoader, MTrsStage.Initialize 함수 및 하위 레벨 Initialize 부분 대략 수정 및 확인

// Version : 0.0.34
// Grade : ★
// Date : 160912~160913
// Context
1. MTrsPushPull.Initialize 함수 및 하위 레벨 Initialize 부분 대략 수정 및 확인
2. Auto Start, Auto Stop Process 작업중

// Version : 0.0.35
// Grade : ★
// Date : 160919~160923
// Context
1. Auto Start, Auto Stop Process 작업중 : start, stop, error report 까지 확인 완료
2. MIO_YMC class : 래더 프로그램과 연계 가능 확인. generate register address rule 변경 및 확인 (with 야스카와전기 박영섭대리)
3. MYaskawa class : update parameters that are needed when call ymcMoveDriverPositioning function.
4. UI : top screnn에 op switch, tower lamp status 추가.

// ********************************************************************************
// test를 위해서 임시로 결과값을 쓰는 코드들은 // for test 로 주석 달기 및 검색해서 사용하도록
// ********************************************************************************

////////////////////////////////////////////////////////////////////////////////////////////
// LJJ
// Version : 0.0.1
// Grade : ★★
// Date : 2016-03-02
// Context
1. Vision Connect
2. Baumer Dll Copy
3. Simulation Vision Mode 설정

// Version : 0.0.2
// Grade : ★★
// Date : 2016-04-04
// Context
1. Hardware Layer에서 System,Camera,Display 객체 생성
2. MVision의 System,Camera,Display를 RefComp로 연결
3. GenerateErrorCode 생성기능을 적용함. 

// Version : 0.0.3
// Grade : ★
// Date : 2016-04-14 ~2016-04-19
// Context
1. MMeElevator : 초기 Class 제작
2. 이동 및 확인에 검색에 대한 기능 구현

// Version : 0.0.4
// Grade : ★
// Date : 2016-04-19 ~2016-04-20
// Context
1. MMeStage : 초기 Class 제작
2. 이동 및 확인에 검색에 대한 기능 구현
3. Git Update 확인.

// Version : 0.0.5
// Grade : ★
// Date : 2016-04-25 ~2016-04-26
// Context
1. MCtrlLoader : 초기 Class 제작
2. Mechanical Layer에서 상속, 필요 함수 구현

// Version : 0.0.6
// Grade : ★
// Date : 2016-04-26 ~2016-04-29 (27일 ACS 테스트)
//		  2016-05-02 ~2016-05-03
// Context

1. MCtrlStage : 초기 Class 제작
   Mechanical Layer의 MMeStage에서 Align 동영상을 보면서 기능을 추가적으로 삽입 필요
                      MMeVision의 기본 기능 구성
					  MMeElevator 에러 명 변경
2. MMeElevator & MMeStage의 함수 일부 수정(정리)
3. MPosition의 생성자에서 변수 초기화 
4. MCtrlStage의 Vision에서 
	- Calibration 및 연산에 관련 기본 함수들 작성 진행
	- ThetaAlign 동작 및 연산부
	- EdgeAlign Position 위치값 설정 동작 (Next button 기능)
	- 카메라 위치 파악 연산 Calibration

// Version : 0.0.7
// Grade : ★
// Date : 2016-05-09 ~2016-05-11
// Context

1. MCtrlStage의 Vision에서 
	- 카메라 위치 파악 연산 Calibration (Micro)
	- 카메라 위치 설정 (Macro)
	- Edge Align 동작 
	- Macro Align 동작 
	- Micro lign 동작 
2. Teaching에 대해서 일부 추가 동작 및 추가 검증이 필요함. 우선 일단락 지음


// Version : 0.0.8
// Grade : ★
// Date : 2016-05-12 ~2016-05-13
// Context

1. ACS Motion Hardware layer
	- MACS Class 작성
	- MMultiAxes_ACS 작성
	- ACS에 Buffer 프로그램 작성 -> PC에서 읽을 각 모터 Status를 2차원 Array에 Copy하는 내용
								   PC에서는 Real 값과 Integer의 배열을 읽어옴.

								   // Version : 0.0.8
// Grade : ★
// Date : 2016-05-26 ~2016-05-28
// Date : 2016-05-30 ~2016-05-31
// Context

1. ACS Motion Hardware layer
	- ACS의 모션 데이터 DB와 연결
	- Servo 위치값,속도,토크 값 읽기 및 Status Bit 상태 확인.
	- MoveToPos,Enable,function 구현
	- HomeSearch 동작 (buffer program Run)
	- ACS Buffer 프로그램에 HomeFlag 추가

2. MCtrlStage1 Class
	- Review & Comment 수정
	- Cam Calibration 수식에서 부호 바꿈 (반대 방향)


// Grade : ★
// Date : 2016-06-08 ~2016-06-10
// Context

1. DataManager
	- CSystemData_Align Create 및 Layer 계층과 연결
	- CSystemData_Light Create
	- Vision & Light DB에 연결함	
	- Screen Move 값을 Camera Fov값과 연결 및 Rotate 값 연산값 적용

2. MMeStage & MCtrlStage Data 정리
3. MMeElevator & MCtrlLoader Data 정리

// Grade : ★
// Date : 2016-08-08 ~2016-08-12
// Context

1. MACS
	- HomeReturn의 지령인 Buffer 실행을 외부 함수로 변경함
	- Laser Process 함수 추가 (Buffer 실행 함수를 사용함)
	- Buffer 의 내부 메모리에 데이터 Write 기능 추가
2. MOpPanel
	- Home Return의 확인 부분 수정 
	  ACS의 HomeFlag Bit가 정상 동작으로 해당 기능을 Enable함. 

// Grade : ★
// Date : 2016-08-15 ~ 2016-08-17
// Context

1. Scanner 프로그램을 합체함
	- Scanner Form 구성 및 Class를 첨부해서 error부분 수정함.
	- Scanner Vision UI중에서 Zoom Cam 부분만 남기고, 중복되는 나머지 부분은 삭제
	- Scan Window Form에서.. Canvas Size를 설정하는 부분이 옮겨지면서 빠진 부분을 수정함.
	- Scanner Layer 구조에 맞게.. Stage부의 Laser관련 Function을 Scanner 클래스로 변경함


// Grade : ★
// Date : 2016-08-18 ~ 2016-08-23
// Context

1. Scanner 동작
	- Scanner MOF & Step&Go Proesss 기능 추가
	- Scanner 동작 테스트 진행
2. Image 및 Object List 저장
	- BMP file 세로를 8배로 Expand하여 저장하는 기능 추가
	- BinaryFomatter 방식으로 List 구조를 저장 및 불러오기 기능 추가
3. Scanner SW 구조 변경
	- Scanner내부 manager,window, object,form 클래스를 외부에서 생성해서 refcomp로 참조 방식에서
	  static 클래스인 MarkingBase의 static 참조 방식의 포인터로 접근함.(확장 메소드 Extension Method 방식)

	  
// Grade : ★★
// Date : 2016-08-23 ~ 2016-08-26
// Context

1. Cadlib를 사용하여 Cad File (dwg or dxf)을 Loading
	- 도면의 각각의 Line을 읽어 (Polyline 형식) 객체로 추가됨
	- 각각의 Line을 읽어올때 객체별로 Group화 시켜 추가되로록 함.
	  (너무 많은 Line의 개수가 추가되는 것을 방지)
	- polyline 별 Group에서 객체별 Group으로 변경.. (객체에 여러개의 polyline이 존재함.. 글자의 경우)
	- 배열 복사할때eh 복사 후 Group화를 진행함.

// Grade : ★★
// Date : 2016-08-27 ~ 2016-08-29
// Context

1. BMP 파일 로딩
	- 사이즈를 Drag해서 이미지의 위치와 크기를 설정함
	- threadhold 기능 테스트 중.. 영상처리 기법을 적용이 필요함.

2. Vision Align
	- Cam Change Funciton 테스트.(서보 이동하면서.. 같은 지점 테스트)
	- Align Parameter관련 DB 연결 및 테스트
	- Vision Overlay 기능 테스트 (Hair Line Show부분)


////////////////////////////////////////////////////////////////////////////////////////////
// LHS
// Version : 0.0.1
// Grade : ★
// Date : 2016-03-07
// Context
1. MDataManager -> CSystemData -> Scanner ini Data 관리를 위한 Class 배열 선언.
2. MLWDicer -> CreatePolygonScanner() Scanner 갯수 만큼 Hardware Layer 생성하는 Function 추가. : Scanner Max 4 ea
3. UI - FormMessageBox 추가
4. UI - FormLaserMaint Scanner IP, Port 입력 추가

// Version : 0.0.2
// Grade : ★
// Date : 2016-03-21
// Context
// * Polygon Scanner Interface 보완
// 1. TFTP 통신 Protocol 추가
//   - InitializeTFTP()
//   - SendTFTPFile(string strIP, string strFilePath)
// 2. COM Serial 통신 Debugging 수정
//   - Event Handler 생성 해제 위치 변경
//   - Receive Event Byte 사이즈 Read로 변경
// 3. Scanner Interface Test를 위한 Manual UI 추가
//   - FormLaserMaint 
// 4. ImageSave 1빈트 단색 Bitmap 형식으로 저장하도록 수정

// Version : 0.0.3
// Grade : ★
// Date : 2016-03-28
// Context
// * UI 변경
// 1. Axis Operation UI 추가
// 2. IO Operation UI 추가
// 3. Excel IO List Load 추가
//  -  MDataManager -> LoadExcelIOList()
//  - IO List 경로 SFA\LWDicer\SystemData\LWDicer_IO_List.xlsx

// Version : 0.0.4
// Grade : ★
// Date : 2016-04-04
// Context
// * UI 변경
// 1. Axis Operation UI 추가
// 2. Motor Parameter UI 추가 / Motor Parameter Excel File Load,Save 구문 추가
//  - MDataManager -> ExportMotorDataFromExcel(string [,] strParameter)
//  - Motor Data 경로 SFA\LWDicer\SystemData\SystemData.xlsx

// Version : 0.0.5
// Grade : ★
// Date : 2016-04-11
// Context
// * UI 변경
// 1. Scanner Image 편집 UI 추가

// Version : 0.0.6
// Grade : ★
// Date : 2016-04-27
// Context
// 1. Spinner Mechanical Layer 추가
//  - MMeSpinner Class 추가
// 2. Scanner Image 흑백 Bitmap 속성 변경 구문 추가

// Version : 0.0.7
// Grade : ★
// Date : 2016-05-03
// Context
// 1. Spinner Mechanical Layer 보완
// 2. Coater, Cleaner Control Layer 추가. 
//    - MCtrlCleaner, MCtrlCoater
//    - Coating Process Data 추가 -> MDataManager CCoatingData
//	  - Cleaning Process Data 추가 -> MDataManager CCleaningData 

// Version : 0.0.8
// Grade : ★
// Date : 2016-05-10
// Context
// 1. Spinner Control Layer 보완
    - MCtrlCleaner, MCtrlCoater를 MCtrlSpinner로 통합함.

// Version : 0.0.9
// Grade : ★
// Date : 2016-05-12
// Context
// 1. GUI 화면전환 및 배치 변경
//   - DISCO UI 화면전환 구조에서 Bottom Menu UI 형식으로 변경
// 2. Spinner Controller Layer Create 함수 분리
//   - CreateCtrlSpinner1(), CreateCtrlSpinner2()

// Version : 0.0.10
// Grade : ★
// Date : 2016-05-16
// Context
// 1. GUI 화면 구성
//  1) Data Screen Sub Form 추가
//    - FormCylinderData, FormModelData, FormMotorData, FormScannerData, FormVisionData, FormWaferData
//  2) Manual Screen Sub Form 추가
//    - FormIO, FormLimitSensor, FormOriginReturn, FormUnitInit

// Version : 0.0.11
// Grade : ★
// Date : 2016-05-19
// Context
// 1. GUI 화면 구성
//	- Cylinder Data 변경 및 저장 화면 구성
//	- Vacuum Data 변경 및 저장 화면 구성
//	- Motor Data 변경 및 저장 화면 구성
//	- Scanner Image Data 저장 구문 추가

// Version : 0.0.12
// Grade : ★
// Date : 2016-05-30
// Context
// 1. Alarm Info, Parameter Info 추가
//	- SystemParaData.xlsx 하나의 엑셀 파일로 통합 관리
//    1번 Sheet : Parameter Info
//    2번 Sheet : Alarm Info
//    3번 Sheet : IO Info
//    4번 Sheet : Motor Data

// Version : 0.0.13
// Grade : ★
// Date : 2016-05-31
// Context
// 1. Maker, Model Data UI 화면 추가
//  - Maker 별 Model Data를 관리

// Version : 0.0.14
// Grade : ★
// Date : 2016-06-01
// Context
// 1. Excel File Read UI 화면 추가
// 2. System Data UI 화면 추가

// Version : 0.0.15
// Grade : ★
// Date : 2016-06-08
// Context
// 1. Teaching Data UI 초안 작성

// Version : 0.0.16
// Grade : ★
// Date : 2016-06-16
// Context
// 1. Teaching Data 처리 UI 작성
// 2. Motion Jog Operation UI 작성


// Version : 0.0.17
// Grade : ★
// Date : 2016-06-23
// Context
// 1.Alarm Message UI 추가
// 2.Manual Screen UI 초안 작성
// 3.Teaching Screen Code 최적화

// Version : 0.0.18
// Grade : ★
// Date : 2016-06-28
// Context
// 1.Alarm Display Message 추가
//  - Alarm Text, Troubleshooting Text 편집 Edit 창 추가로 Text 관리
// 2.Excel Import, Export 수정 
//  - Alarm Info, Motor Data    
// 3.Message Box 수정
//  - OK, CANCEL, CONFIRM 버튼 

// Version : 0.0.19
// Grade : ★
// Date : 2016-06-28 ~ 2016-06-29
// Context
// 1.Message Box 수정
//  - SystemParaData Excel 파일 Message Info Sheet 추가
//  - Message Info Excel Import, Export 추가

// Version : 0.0.19
// Grade : ★
// Date : 2016-07-01 ~ 2016-07-07
// Context
// 1.Wafer Cassette Data UI 추가
// 2.Model Data UI 추가
// 3.Coating Data UI 추가
// 4.Cleaning Data UI 추가

// Version : 0.0.20
// Grade : ★
// Date : 2016-07-08 ~ 2016-07-12
// Context
// 1.Log Screen UI 추가

// Version : 0.0.21
// Grade : ★
// Date : 2016-07-12 ~ 2016-07-14
// Context
// 1.Log Screen UI
//  - Event, Dev Log Option 추가

// Version : 0.0.22
// Grade : ★
// Date : 2016-07-15 ~ 2016-07-21
// Context
// 1.Log Screen UI
//  - 검색 조건 변경 : 시간별로 DESC 순으로 변경
//  - 한페이지 23 라인 DISPLAY / 버튼식 페이지 전환
// 2.User Login 화면 추가.
// 3.Password 변경 화면 추가.
// 4.Wafer Data 초안 작성.


// Version : 0.0.23
// Grade : ★
// Date : 2016-07-27 ~ 2016-07-28
// Context
// 1.Log Screen Excel Export 구문 수정


