////////////////////////////////////////////////////////////////////////////////////////////
// How to 
// write histroy until using SVN or DVCS
// Grade : ★ to ★★★

////////////////////////////////////////////////////////////////////////////////////////////
// SJR

// Version : 0.0.1
// Grade : ★
// Date : 2016-01-29
// Context
1. Data 관리를 structure -> class로 바꾸고, 이를 위해 class의 deep copy함수를 만들었음.
함수 사용법 : T target = ObjectExtensions.Copy(T source);
2. SPos_XY,XYT,XYTZ 등의 structure 등을 class로 변경, structure는 hardware library 때문에 필요한
경우가 아니면 자제할 것.
3. MLWDicer class에서 각 component class 생성 및 초기화 하는 부분의 틀을 만들어가기 시작함.
5. 그외 바뀐 부분들에 대하여 build success 확인

// Version : 0.0.2
// Grade : ★
// Date : 2016-02-14
// Context
1. DataBase를 SQLite 사용하기로 결정. NuGet -> System.Data.SQLite 추가
serialization 기능을 이용해서 자동으로 data class save, load하는 부분 완료. NuGet -> Newtonsoft.Json 추가
2. Database를 용도별로 몇개로 구분. MLog에서 파일로 저장하는 기능에 추가로 DB에 저장하는 기능도 추가
3. DBManager class 생성 및 입출력 일반화, backup, delete, insert등의 일반 기능 적용.
4. Net Runtime Library v4.6 으로 변경
5. app.setting을 이용하기 위해서 System.Configuration 참조 추가 
6. system data, model data, log save/load 기능 추가

// Version : 0.0.3
// Grade : ★
// Date : 2016-02-22
// Context
1. 정월대보름
2. UI와 통합.
3. IO info file save/load 기능 추가
4. Git에 올리는 최초 버전
5. 4를 위해 참조에서 syncfusion lib 경로 수정

// Version : 0.0.4
// Grade : ★
// Date : 2016-03-02
// Context
1. Error info file save/load 기능 추가
2. T:\SFA\LWDicer\dll\Syncfusion 디렉토리로 syncfusion dll 참조 파일 모아놓음
3. Merge sjr & lhs

// Version : 0.0.5
// Grade : ★
// Date : 2016-03-03
// Context
1. MIO_YMC : Yaskawa IO class 기본 작업, SIMULATION_MOTION, SIMULATION_IO
2. MMotion_YMC : 기본 class 틀만 작업해놓고 있음

// Version : 0.0.6
// Grade : ★
// Date : 2016-03-22
// Context
1. MYaskawa : IO & Motion을 통합 제어하는 class. 1단계로 1cpu & 1port 기준으로 프로그램 작성
   MYaskawa class의 data에서 Motor data를 관리하고(max velocity, home offset, acc,dec, sw limit 등등)
   대신에 MMultiAxes_YMC class에서는 상대적으로 axis data check하는 부분을 MYaskawa가 담당하도록 구성
2. MMultiAxes_YMC : MYaskawa class의 윗부분을 담당할 멀티축 제어용 class, 
   단 최대 축수는 DEF_MAX_COORDINATE 4축으로 제한하여 설계함.
3. LWDicer class에서 MYaskawa 및 MMultiAxes_YMC 인스턴스 생성 부분 추가함

// Version : 0.0.7
// Grade : ★
// Date : 2016-03-22
// Context
1. CParaInfo class : Parameter 정보를 담는 클래스 및 관련 DB 작업 완료

// Version : 0.0.8
// Grade : ★
// Date : 2016-03-30
// Context
1. MMeHandler : Mechanical Layer 의 Handler class 1차 작업
2. 1을 진행하면서 MultiAxes_YMC, MYaskawa debugging하면서 수정작업
3. MLWDicer의 create handler, multiaxes 추가 및 MPMotionData를 db와 연결작업

// Version : 0.0.9
// Grade : ★
// Date : 2016-03-30
// Context
1. DataManager의 멤버들에서 m_ 접두어 제거, CSystemData에서 class array 형태의 멤버들은 별도의
클래스로 분리하여 load/save 루틴 추가
2. CMPMotionData class 속도 및 원점 복귀 관련하여 재정리

// Version : 0.0.10
// Grade : ★
// Date : 2016-04-05
// Context
1. MMeHandler : Up/Down 등의 cylidner 관련 함수들 정리중..
2. 각 Unit별 좌표 class CUnitPos 추가 및 save/load 및 인스턴스에 할당 관련 함수들 정리중..
3. MultiAxes 와 1:1로 맵핑되어 티칭 좌표등을 종합적으로 관리하는 CMovingObject class 추가함
4. DataManage의 데이터 읽고 쓰는 부분 함수들 정리 및 LWDicer에서 DataManager 호출하는 함수들도 정리
UI에서 화면 로딩할때 데이터는 DataManager에서 바로 읽고, 쓰는건 setdataToComponenet 처리하는것때문에 
LWDicer의 SaveSystemData, SaveModelData를 이용해서 저장하는 방식으로 호출함
(강제로 유도하기 위해서 property format 으로 바꾸고 { get; private set; } 으로 지정함)
LWDicer의 DataManager에서 데이터를 읽어오기 위한 3가지 함수 : SetSystemDataToComponent(), SetModelDataToComponent(), SetPositionDataToComponent()

// Version : 0.0.11
// Grade : ★
// Date : 2016-04-14
// Context
1. CMAxisZoneCheck : MultiAxes 축을 가진 Object가 이동시에, 특정 축이 안전위치로 이동후에 목표 위치로 
움직일 수 있도록 CMAxisZoneCheck class 를 추가함. 이때 안전위치를 체크하는 것은 로봇 위치가 아닌 센서로 감지하는 조건임. 
2. MMeHandler: 1번항목 관련 update 및 이동 관련 함수들을 상위 class 에서 호출하기 쉽도록 함수들 정리
3. CSystemData_MAxSafetyPos : 각 MultiAxes의 Safety Position을 system data에서 관리 
4. MCtrlHandler : skeleton code 작성 시작
5. MMechanicalLayer, MCtrlLayer의 필수 특성들을 위한 각 Layer의 Parent class 작성

// Version : 0.0.12
// Grade : ★
// Date : 2016-04-19
// Context
1. MCtrlHandler : 1차 작업 완료. 
   *** Upper/Lower Handler를 일단 Load/Unload Handler로 전용하는 개념으로 함수들을 만들었으나, 
   실제로 상위에서 알아서 반대로 호출해야할지, ctrl에서 알아서 반대로 실행해야할지, 
   혹은 애초에 저장 pos을 다르게 해야할지는 좀더 고민하는걸로 남겨둠.

////////////////////////////////////////////////////////////////////////////////////////////
// LJJ
// Version : 0.0.1
// Grade : ★★
// Date : 2016-03-02
// Context
1. Vision Connect
2. Baumer Dll Copy
3. Simulation Vision Mode 설정

// Version : 0.0.2
// Grade : ★★
// Date : 2016-04-04
// Context
1. Hardware Layer에서 System,Camera,Display 객체 생성
2. MVision의 System,Camera,Display를 RefComp로 연결
3. GenerateErrorCode 생성기능을 적용함. 

// Version : 0.0.3
// Grade : ★
// Date : 2016-04-14 ~2016-04-19
// Context
1. MMeElevator : 초기 Class 제작
2. 이동 및 확인에 검색에 대한 기능 구현

// Version : 0.0.4
// Grade : ★
// Date : 2016-04-19 ~2016-04-20
// Context
1. MMeStage : 초기 Class 제작
2. 이동 및 확인에 검색에 대한 기능 구현
3. Git Update 확인.


////////////////////////////////////////////////////////////////////////////////////////////
// LHS
// Version : 0.0.1
// Grade : ★
// Date : 2016-03-07
// Context
1. MDataManager -> CSystemData -> Scanner ini Data 관리를 위한 Class 배열 선언.
2. MLWDicer -> CreatePolygonScanner() Scanner 갯수 만큼 Hardware Layer 생성하는 Function 추가. : Scanner Max 4 ea
3. UI - FormMessageBox 추가
4. UI - FormLaserMaint Scanner IP, Port 입력 추가

// Version : 0.0.2
// Grade : ★
// Date : 2016-03-21
// Context
// * Polygon Scanner Interface 보완
// 1. TFTP 통신 Protocol 추가
//   - InitializeTFTP()
//   - SendTFTPFile(string strIP, string strFilePath)
// 2. COM Serial 통신 Debugging 수정
//   - Event Handler 생성 해제 위치 변경
//   - Receive Event Byte 사이즈 Read로 변경
// 3. Scanner Interface Test를 위한 Manual UI 추가
//   - FormLaserMaint 
// 4. ImageSave 1빈트 단색 Bitmap 형식으로 저장하도록 수정

// Version : 0.0.3
// Grade : ★
// Date : 2016-03-28
// Context
// * UI 변경
// 1. Axis Operation UI 추가
// 2. IO Operation UI 추가
// 3. Excel IO List Load 추가
//  -  MDataManager -> LoadExcelIOList()
//  - IO List 경로 SFA\LWDicer\SystemData\LWDicer_IO_List.xlsx

// Version : 0.0.4
// Grade : ★
// Date : 2016-04-04
// Context
// * UI 변경
// 1. Axis Operation UI 추가
// 2. Motor Parameter UI 추가 / Motor Parameter Excel File Load,Save 구문 추가
//  - MDataManager -> SaveExcelSystemData(string [,] strParameter)
//  - Motor Data 경로 SFA\LWDicer\SystemData\SystemData.xlsx

// Version : 0.0.5
// Grade : ★
// Date : 2016-04-11
// Context
// * UI 변경
// 1. Scanner Image 편집 UI 추가

