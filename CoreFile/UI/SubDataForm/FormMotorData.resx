<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnExit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAAAR5JREFUWEftUQkOwyAM69P7860Gh0LCUZoemjRLXiEOtqUtf5zAx0k3Puu6Hib2
        AfzK2+DigAlpEbspnHfOXTBBNWKvCOeM2jTC43gcF8COCeec+jSSAagDc0KvhlPjzjTM/1gjtGY4de5N
        I5qKcaOE2dO8pECnRLGHu2anQHzc42YK9ErI3rkCuXmHQLpnppcVOIoiaDcu55pHCkzRGlstZ7eAXtbM
        g/MAmvoLjDgIrxaQtzjz3iowwjDcFNjOQJhBo+4roIw00x6D0wxfnjmbxjAcDHtSQO6Vt9t3GoWhDhYG
        PS+g6SoQCZhgIbQ7CwhMsBDaqEBwcEKM6mwViPrtqBd4KBywBR4MB8oCD4cDe4EXwoFXw4FXw38Ry/IF
        ATQI3pt29lYAAAAASUVORK5CYII=
</value>
  </data>
  <data name="BtnImageDataSave.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>